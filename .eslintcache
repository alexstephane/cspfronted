[{"/Users/alexstephane/Documents/projects/cspfrontend/src/index.js":"1","/Users/alexstephane/Documents/projects/cspfrontend/src/reportWebVitals.js":"2","/Users/alexstephane/Documents/projects/cspfrontend/src/App.js":"3","/Users/alexstephane/Documents/projects/cspfrontend/src/components/User.js":"4","/Users/alexstephane/Documents/projects/cspfrontend/src/components/Department.js":"5","/Users/alexstephane/Documents/projects/cspfrontend/src/components/Event.js":"6","/Users/alexstephane/Documents/projects/cspfrontend/src/components/Login.js":"7","/Users/alexstephane/Documents/projects/cspfrontend/src/components/Navigation.js":"8","/Users/alexstephane/Documents/projects/cspfrontend/src/components/CreatUserModal.js":"9","/Users/alexstephane/Documents/projects/cspfrontend/src/components/EditUserModal.js":"10","/Users/alexstephane/Documents/projects/cspfrontend/src/components/CreatDepartmentModal.js":"11","/Users/alexstephane/Documents/projects/cspfrontend/src/components/EditDepatmentModal.js":"12"},{"size":1467,"mtime":1612215583430,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1611625675654,"results":"15","hashOfConfig":"14"},{"size":968,"mtime":1611871861305,"results":"16","hashOfConfig":"14"},{"size":4813,"mtime":1615485889991,"results":"17","hashOfConfig":"14"},{"size":4523,"mtime":1615488377373,"results":"18","hashOfConfig":"14"},{"size":275,"mtime":1611871843044,"results":"19","hashOfConfig":"14"},{"size":274,"mtime":1611871830186,"results":"20","hashOfConfig":"14"},{"size":948,"mtime":1611863441759,"results":"21","hashOfConfig":"14"},{"size":4183,"mtime":1612309867994,"results":"22","hashOfConfig":"14"},{"size":4402,"mtime":1615481501351,"results":"23","hashOfConfig":"14"},{"size":4157,"mtime":1612723471956,"results":"24","hashOfConfig":"14"},{"size":4911,"mtime":1612730791070,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"pwyi89",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"/Users/alexstephane/Documents/projects/cspfrontend/src/index.js",[],["55","56"],"/Users/alexstephane/Documents/projects/cspfrontend/src/reportWebVitals.js",[],"/Users/alexstephane/Documents/projects/cspfrontend/src/App.js",[],"/Users/alexstephane/Documents/projects/cspfrontend/src/components/User.js",["57","58","59","60"],"/Users/alexstephane/Documents/projects/cspfrontend/src/components/Department.js",["61","62","63","64"],"/Users/alexstephane/Documents/projects/cspfrontend/src/components/Event.js",[],"/Users/alexstephane/Documents/projects/cspfrontend/src/components/Login.js",[],"/Users/alexstephane/Documents/projects/cspfrontend/src/components/Navigation.js",[],"/Users/alexstephane/Documents/projects/cspfrontend/src/components/CreatUserModal.js",["65"],"import React,{ compoment, Component } from \"react\";\nimport {Modal,Button,Row,Col,Form} from 'react-bootstrap';\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\n\nexport class  CreatUserModal extends Component{\n\n\nconstructor(props) {\n    super(props);\n\nthis.state = {snackbaropen: false, snackbarmsg:''};\nthis.handleSubmit = this.handleSubmit.bind(this);\n}\n\nSnackbarClose = (event) =>{\n  this.setState({snackbaropen:false});\n}\n\n\nhandleSubmit(event){\nevent.preventDefault();\n//alert(event.target.MemberName.value);\n\nfetch(`http://localhost:3004/users`,{\n  method:\"POST\",\n  headers:{\n    'Accept':'application/json',\n    'Content-Type': 'application/json'\n\n  },\n  body:JSON.stringify({\n    name: event.target.name.value,\n    phone: event.target.phone.value,\n    email: event.target.email.value\n\n  })\n})\n.then(resp=> resp.json())\n.then((result)=>{\n//alert(result)\n//this.setState({snackbaropen:true, snackbarmsg:result})\n\n},\n(error)=>{\n  //alert('Failed')\n  this.setState({snackbaropen:true, snackbarmsg:\"failed\"})\n\n}\n)\n}\n\n\n\n\n\n\n        render(){\n            // console.log(\"aledx\")\n           \n            return(\n\n              <div className=\"container\">\n                  <Snackbar\n                  anchorOrigin={{vertical:'center',horizontal:'center'}}\n                  open = {this.state.snackbaropen}\n                  autoHideDuration = {3000}\n                  onClick={this.SnackbarClose}\n                  message = {<span id=\"message-id\">{this.state.snackbarmsg}</span>}\n                  action ={[\n                    <IconButton\n                    key=\"close\"\n                    color=\"inherit\"\n                    onClick={this.SnackbarClose}>\n                      c\n                      x\n                    </IconButton>\n                  ]}\n\n                  />\n              <Modal\n                {...this.props}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n              >\n                <Modal.Header closeButton>\n                  <Modal.Title id=\"contained-modal-title-vcenter\">\n                    ADD A MEMBER\n                  </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                  \n          \n                     <Row>\n                       <Col sm={6}></Col>\n                       <Form onSubmit={this.handleSubmit}>\n                         <Form.Group controlId=\"name\">\n                         <Form.Label>Name</Form.Label>  \n                         <Form.Control \n                         type=\"text\"\n                         name= \"name\"\n                         required\n                         placeholder=\"name\"\n                         \n                         />\n                         </Form.Group>\n                         <Form.Group controlId=\"email\">\n                         <Form.Label>Email Address</Form.Label>  \n                         <Form.Control \n                         type=\"text\"\n                         name= \"email\"\n                         required\n                         placeholder=\"Email\"\n                         \n                         />\n                         </Form.Group>\n\n                         <Form.Group controlId=\"phone\">\n                         <Form.Label>phone Number</Form.Label>  \n                         <Form.Control \n                         type=\"text\"\n                         name= \"phone\"\n                         required\n                         placeholder=\"Phone\"\n                         \n                         />\n                         </Form.Group>\n\n                         \n\n                         <Button variant=\"primary\" type=\"submit\">\n                           Add Member\n                         </Button>\n                         </Form>\n\n                       \n\n\n                     </Row>\n                 \n                </Modal.Body>\n                <Modal.Footer>\n                  <Button variant=\"danger\"onClick={this.props.onHide}>Close</Button>\n                </Modal.Footer>\n              </Modal>\n                \n              </div>\n\n\n            )\n\n\n        }\n\n}\n  ","/Users/alexstephane/Documents/projects/cspfrontend/src/components/EditUserModal.js",["66","67","68","69"],"import React,{ compoment, Component } from \"react\";\nimport {Modal,Button,Row,Col,Form} from 'react-bootstrap';\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\n\nexport class  EditUserModal extends Component{\n\n\n\nconstructor(props) {\n    super(props);\n \n// this.state = {snackbaropen: false, snackbarmsg:''};\n// this.handleSubmit = this.handleSubmit.bind(this);\n}\n\n// state = {\n//   userid: this.state.user.id, \n  \n \n// }\n\n\n\n\n// SnackbarClose = (event) =>{\n//   this.setState({snackbaropen:false});\n// }\n\n\nhandleSubmit(event){\n  \n  \nevent.preventDefault();\n//alert(event.target.MemberName.value);\n\nfetch('http://localhost:3004/users/289',{\n  method:\"PATCH\",\n  headers:{\n    'Accept':'application/json',\n    'Content-Type': 'application/json'\n\n  },\n  body:JSON.stringify({\n   id: event.target.id.value,\n    name: event.target.name.value,\n    phone: event.target.phone.value,\n    email: event.target.email.value\n\n  })\n})\n// .then(resp=> resp.json())\n// .then((result)=>{\n//     console.log(result)\n// //alert(result)\n\n\n//  },\n//  (error)=>{\n// alert('Failed')\n// //   this.setState({snackbaropen:true, snackbarmsg:\"failed\"})\n//  }\n //)\n}\n\n\n\n\n\n\n        render(){\n           // console.log(\"alex\")\n           //console.log(userid)\n           \n            return(\n\n             \n                \n     \n              <Modal\n                {...this.props}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n              >\n                <Modal.Header closeButton>\n                  <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Edit A MEMBER\n                  </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                  \n                <Row>\n                       <Col sm={6}></Col>\n                       <Form onSubmit={this.handleSubmit}>\n                            \n                       <Form.Group controlId=\"id\">\n                         <Form.Label>Member Id</Form.Label>  \n                         <Form.Control \n                         type=\"text\"\n                         name= \"id\"\n                         required\n                         disabled\n                         defaultValue = {this.props.userid}\n                         placeholder=\"id\"\n                         \n                         />\n                         </Form.Group>\n\n\n                         <Form.Group controlId=\"name\">\n                         <Form.Label>Name</Form.Label>  \n                         <Form.Control \n                         type=\"text\"\n                         name= \"name\"\n                         required\n                         defaultValue = {this.props.username}\n                         placeholder=\"name\"\n                         \n                         />\n                         </Form.Group>\n                         <Form.Group controlId=\"email\">\n                         <Form.Label>Email Address</Form.Label>  \n                         <Form.Control \n                         type=\"text\"\n                         name= \"email\"\n                         required\n                         defaultValue = {this.props.useremail}\n                         placeholder=\"Email\"\n                         \n                         />\n                         </Form.Group>\n\n                         <Form.Group controlId=\"phone\">\n                         <Form.Label>phone Number</Form.Label>  \n                         <Form.Control \n                         type=\"text\"\n                         name= \"phone\"\n                         required\n                         defaultValue = {this.props.userphone}\n                         placeholder=\"Phone\"\n                         \n                         />\n                         </Form.Group>\n\n                         \n\n                         <Button variant=\"primary\" type=\"submit\">\n                          Update member\n                         </Button>\n                         </Form>\n\n                       \n\n\n                     </Row>\n                 \n                    \n                </Modal.Body>\n                <Modal.Footer>\n                  <Button variant=\"danger\"onClick={this.props.onHide}>Close</Button>\n                </Modal.Footer>\n              </Modal>\n                \n              \n\n\n            )\n\n\n        }\n\n}","/Users/alexstephane/Documents/projects/cspfrontend/src/components/CreatDepartmentModal.js",["70"],"import React,{ compoment, Component } from \"react\";\nimport {Modal,Button,Row,Col,Form} from 'react-bootstrap';\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\n\nexport class  CreatDepartmentModal extends Component{\n\n\nconstructor(props) {\n    super(props);\n\nthis.state = {snackbaropen: false, snackbarmsg:'',departments:[]};\nthis.handleSubmit = this.handleSubmit.bind(this);\n}\n\n\ncomponentDidMount(){\nfetch(`http://localhost:3004/departments`)\n  .then(resp => resp.json())\n  .then(data => {\n    this.setState({departments:data})\n    console.log(data)\n\n  })\n  \n}\nSnackbarClose = (event) =>{\n  this.setState({snackbaropen:false});\n}\n\n\nhandleSubmit(event){\nevent.preventDefault();\n//alert(event.target.MemberName.value);\n\nfetch(`http://localhost:3004/departments`,{\n  method:\"POST\",\n  headers:{\n    'Accept':'application/json',\n    'Content-Type': 'application/json'\n\n  },\n  body:JSON.stringify({\n    id: event.target.id.value,\n    name: event.target.name.value,\n    role: event.target.role.value,\n    \n  })\n})\n.then(resp=> resp.json())\n.then((result)=>{\n//alert(result)\n//this.setState({snackbaropen:true, snackbarmsg:result})\n\n},\n(error)=>{\n  //alert('Failed')\n  this.setState({snackbaropen:true, snackbarmsg:\"failed\"})\n\n}\n)\n}\n\n\n\n\n\n\n        render(){\n            // console.log(\"aledx\")\n           \n            return(\n\n              <div className=\"container\">\n                  <Snackbar\n                  anchorOrigin={{vertical:'center',horizontal:'center'}}\n                  open = {this.state.snackbaropen}\n                  autoHideDuration = {3000}\n                  onClick={this.SnackbarClose}\n                  message = {<span id=\"message-id\">{this.state.snackbarmsg}</span>}\n                  action ={[\n                    <IconButton\n                    key=\"close\"\n                    color=\"inherit\"\n                    onClick={this.SnackbarClose}>\n                      c\n                      x\n                    </IconButton>\n                  ]}\n\n                  />\n              <Modal\n                {...this.props}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n              >\n                <Modal.Header closeButton>\n                  <Modal.Title id=\"contained-modal-title-vcenter\">\n                    ADD A Department\n                  </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                  \n          \n                     <Row>\n                       <Col sm={6}></Col>\n                       <Form onSubmit={this.handleSubmit}>\n                         <Form.Group controlId=\"name\">\n                         <Form.Label>Name</Form.Label>  \n                         <Form.Control \n                         type=\"text\"\n                         name= \"name\"\n                         required\n                         placeholder=\"name\"\n                         \n                         />\n                         </Form.Group>\n                         <Form.Group controlId=\"role\">\n                         <Form.Label>Role</Form.Label>  \n                         <Form.Control as=\"select\">\n                           {this.state.departments.map(department =>\n                            \n                            <option key={department.id}> {department.roles[0]}</option>\n                            \n                            \n                            \n                            )}\n\n\n                         </Form.Control>\n                         </Form.Group>\n\n                         \n\n                         \n\n                         <Button variant=\"primary\" type=\"submit\">\n                           Add A Departmemt\n                         </Button>\n                         </Form>\n\n                       \n\n\n                     </Row>\n                 \n                </Modal.Body>\n                <Modal.Footer>\n                  <Button variant=\"danger\"onClick={this.props.onHide}>Close</Button>\n                </Modal.Footer>\n              </Modal>\n                \n              </div>\n\n\n            )\n\n\n        }\n\n}\n  ","/Users/alexstephane/Documents/projects/cspfrontend/src/components/EditDepatmentModal.js",["71","72","73","74"],"import React,{ compoment, Component } from \"react\";\nimport {Modal,Button,Row,Col,Form} from 'react-bootstrap';\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\n\nexport class  EditDepatmentModal extends Component{\n\n\nconstructor(props) {\n    super(props);\n\nthis.state = {snackbaropen: false, snackbarmsg:'',departments:[]};\nthis.handleSubmit = this.handleSubmit.bind(this);\n}\n\n\ncomponentDidMount(){\nfetch(`http://localhost:3004/departments/`)\n  .then(resp => resp.json())\n  .then(data => {\n    this.setState({departments:data})\n    console.log(data)\n\n  })\n  \n}\nSnackbarClose = (event) =>{\n  this.setState({snackbaropen:false});\n}\n\n\nhandleSubmit(event){\nevent.preventDefault();\n//alert(event.target.MemberName.value);\n\nfetch(`http://localhost:3004/departments/288`,{\n  method:\"PUT\",\n  headers:{\n    'Accept':'application/json',\n    'Content-Type': 'application/json'\n\n  },\n  body:JSON.stringify({\n    id: event.target.id.value,\n    name: event.target.name.value,\n    role: event.target.role.value,\n    \n  })\n})\n.then(resp=> resp.json())\n.then((result)=>{\n//alert(result)\n//this.setState({snackbaropen:true, snackbarmsg:result})\n\n},\n(error)=>{\n  //alert('Failed')\n  this.setState({snackbaropen:true, snackbarmsg:\"failed\"})\n\n}\n)\n}\n\n\n\n\n\n\n        render(){\n            // console.log(\"aledx\")\n           \n            return(\n\n              <div className=\"container\">\n                  <Snackbar\n                  anchorOrigin={{vertical:'center',horizontal:'center'}}\n                  open = {this.state.snackbaropen}\n                  autoHideDuration = {3000}\n                  onClick={this.SnackbarClose}\n                  message = {<span id=\"message-id\">{this.state.snackbarmsg}</span>}\n                  action ={[\n                    <IconButton\n                    key=\"close\"\n                    color=\"inherit\"\n                    onClick={this.SnackbarClose}>\n                      c\n                      x\n                    </IconButton>\n                  ]}\n\n                  />\n              <Modal\n                {...this.props}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n              >\n                <Modal.Header closeButton>\n                  <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Update Department\n                  </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                  \n          \n                     <Row>\n                       <Col sm={6}></Col>\n                       <Form onSubmit={this.handleSubmit}>\n                         \n\n                       <Form.Group controlId=\"id\">\n                         <Form.Label>Department ID</Form.Label>  \n                         <Form.Control \n                         type=\"text\"\n                         name= \"name\"\n                         required\n                         placeholder=\"name\"\n                         name= \"id\"\n                         required\n                         disabled\n                         defaultValue = {this.props.userid}\n                         placeholder=\"id\"\n                         \n                         />\n                         </Form.Group>\n\n                         <Form.Group controlId=\"name\">\n                         <Form.Label>Name</Form.Label>  \n                         <Form.Control \n                         type=\"text\"\n                         name= \"name\"\n                         required\n                         placeholder=\"name\"\n                         defaultValue = {this.props.departmentRole}\n                         \n                         />\n                         </Form.Group>\n                         <Form.Group controlId=\"role\">\n                         <Form.Label>Role</Form.Label>  \n                         <Form.Control as=\"select\">\n\n                           {this.state.departments.map(department =>\n                            \n                            <option key={department.id}> {department.roles[0]}</option>\n                            \n                            \n                            )}\n\n                              defaultValue = {this.props.departmentRole}\n\n                         </Form.Control>\n                         </Form.Group>\n\n                         \n\n                         \n\n                         <Button variant=\"primary\" type=\"submit\">\n                           Update Departmemt\n                         </Button>\n                         </Form>\n\n                       \n\n\n                     </Row>\n                 \n                </Modal.Body>\n                <Modal.Footer>\n                  <Button variant=\"danger\"onClick={this.props.onHide}>Close</Button>\n                </Modal.Footer>\n              </Modal>\n                \n              </div>\n\n\n            )\n\n\n        }\n\n}\n  ",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":75,"column":24,"nodeType":"81","messageId":"82","endLine":75,"endColumn":30},{"ruleId":"79","severity":1,"message":"83","line":75,"column":31,"nodeType":"81","messageId":"82","endLine":75,"endColumn":39},{"ruleId":"79","severity":1,"message":"84","line":75,"column":40,"nodeType":"81","messageId":"82","endLine":75,"endColumn":49},{"ruleId":"79","severity":1,"message":"85","line":75,"column":51,"nodeType":"81","messageId":"82","endLine":75,"endColumn":60},{"ruleId":"79","severity":1,"message":"80","line":80,"column":26,"nodeType":"81","messageId":"82","endLine":80,"endColumn":32},{"ruleId":"79","severity":1,"message":"83","line":80,"column":33,"nodeType":"81","messageId":"82","endLine":80,"endColumn":41},{"ruleId":"79","severity":1,"message":"84","line":80,"column":42,"nodeType":"81","messageId":"82","endLine":80,"endColumn":51},{"ruleId":"79","severity":1,"message":"85","line":80,"column":53,"nodeType":"81","messageId":"82","endLine":80,"endColumn":62},{"ruleId":"79","severity":1,"message":"86","line":1,"column":16,"nodeType":"81","messageId":"82","endLine":1,"endColumn":25},{"ruleId":"79","severity":1,"message":"86","line":1,"column":16,"nodeType":"81","messageId":"82","endLine":1,"endColumn":25},{"ruleId":"79","severity":1,"message":"87","line":3,"column":8,"nodeType":"81","messageId":"82","endLine":3,"endColumn":16},{"ruleId":"79","severity":1,"message":"88","line":4,"column":8,"nodeType":"81","messageId":"82","endLine":4,"endColumn":18},{"ruleId":"89","severity":1,"message":"90","line":11,"column":1,"nodeType":"91","messageId":"92","endLine":16,"endColumn":2},{"ruleId":"79","severity":1,"message":"86","line":1,"column":16,"nodeType":"81","messageId":"82","endLine":1,"endColumn":25},{"ruleId":"79","severity":1,"message":"86","line":1,"column":16,"nodeType":"81","messageId":"82","endLine":1,"endColumn":25},{"ruleId":"93","severity":1,"message":"94","line":119,"column":26,"nodeType":"95","endLine":119,"endColumn":36},{"ruleId":"93","severity":1,"message":"94","line":120,"column":26,"nodeType":"95","endLine":120,"endColumn":34},{"ruleId":"93","severity":1,"message":"94","line":123,"column":26,"nodeType":"95","endLine":123,"endColumn":42},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'userid' is assigned a value but never used.","Identifier","unusedVar","'username' is assigned a value but never used.","'useremail' is assigned a value but never used.","'userphone' is assigned a value but never used.","'compoment' is defined but never used.","'Snackbar' is defined but never used.","'IconButton' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]