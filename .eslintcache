[{"/Users/alexstephane/Documents/projects/cspfrontend/src/index.js":"1","/Users/alexstephane/Documents/projects/cspfrontend/src/reportWebVitals.js":"2","/Users/alexstephane/Documents/projects/cspfrontend/src/App.js":"3","/Users/alexstephane/Documents/projects/cspfrontend/src/components/User.js":"4","/Users/alexstephane/Documents/projects/cspfrontend/src/components/Department.js":"5","/Users/alexstephane/Documents/projects/cspfrontend/src/components/Event.js":"6","/Users/alexstephane/Documents/projects/cspfrontend/src/components/Login.js":"7","/Users/alexstephane/Documents/projects/cspfrontend/src/components/Navigation.js":"8","/Users/alexstephane/Documents/projects/cspfrontend/src/components/CreatUserModal.js":"9","/Users/alexstephane/Documents/projects/cspfrontend/src/components/EditUserModal.js":"10","/Users/alexstephane/Documents/projects/cspfrontend/src/components/CreatDepartmentModal.js":"11","/Users/alexstephane/Documents/projects/cspfrontend/src/components/EditDepatmentModal.js":"12"},{"size":1467,"mtime":1612215583430,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1611625675654,"results":"15","hashOfConfig":"14"},{"size":968,"mtime":1611871861305,"results":"16","hashOfConfig":"14"},{"size":4769,"mtime":1612300258503,"results":"17","hashOfConfig":"14"},{"size":4779,"mtime":1612376323618,"results":"18","hashOfConfig":"14"},{"size":275,"mtime":1611871843044,"results":"19","hashOfConfig":"14"},{"size":274,"mtime":1611871830186,"results":"20","hashOfConfig":"14"},{"size":948,"mtime":1611863441759,"results":"21","hashOfConfig":"14"},{"size":4183,"mtime":1612309867994,"results":"22","hashOfConfig":"14"},{"size":4402,"mtime":1612309732520,"results":"23","hashOfConfig":"14"},{"size":3807,"mtime":1612329694888,"results":"24","hashOfConfig":"14"},{"size":4402,"mtime":1612321670312,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"pwyi89",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/alexstephane/Documents/projects/cspfrontend/src/index.js",[],["54","55"],"/Users/alexstephane/Documents/projects/cspfrontend/src/reportWebVitals.js",[],"/Users/alexstephane/Documents/projects/cspfrontend/src/App.js",[],"/Users/alexstephane/Documents/projects/cspfrontend/src/components/User.js",["56","57","58","59"],"import React, {Component} from \"react\";\nimport {Table} from \"react-bootstrap\";\nimport {Button,ButtonToolbar} from 'react-bootstrap';\nimport {CreatUserModal} from './CreatUserModal';\nimport {EditUserModal} from './EditUserModal';\n\n\nexport class User extends Component {\n\n\n        state = {\n            users: [], \n            editUserModalShow:false,\n            creatUserModalShow:false,\n           \n        }\n\n        showCreate(){\n            this.setState({\n                creatUserModalShow:!this.state.creatUserModalShow,\n               // editUserModalShow:!this.state.editUserModalShow\n            })\n        }\n\n\n        show(userid,username,useremail,userphone){\n            this.setState({\n                editUserModalShow:true\n            })\n        }\n\n       \n         componentDidMount(){\n            this.refreshList();\n            \n             }\n         \n\n        refreshList(){\n            //console.log(\"data\")\n\n\n            fetch('http://localhost:3004/users')\n                .then(resp=> resp.json())\n                .then(data => {\n                 //console.log(data)\n                 this.setState({users:data})\n                });\n                \n        }\n\n        componentDidUpdate(){\n            this.refreshList();\n        }\n\n\n        deleteUser(userid){\n            console.log(userid)\n            if(window.confirm(\"are you sure you want to delete this Member?\"))\n      \n            fetch(\"http://localhost:3004/users/\"+userid,{\n                method:\"DELETE\",\n                headers:{\n                  'Accept':'application/json',\n                  'Content-Type': 'application/json'\n              \n                }\n                \n              })\n            \n        }\n\n    render(){\n         const {users, userid,username,useremail, userphone} = this.state;\n         let creatUserModalClose =() => this.setState({creatUserModalShow:false})\n         let editUserModalClose =() => this.setState({editUserModalShow:false})\n        \n        return(\n            <div>\n        <Table className=\"mt-4 \"striped bordered hover size=\"sm\">\n            <thead>\n                <tr>\n                   \n                    <th>name </th>\n                    <th> phone # </th>\n                    <th>Email</th>\n                    <th>ID</th>\n                    <th>Options</th>\n                    \n                </tr>\n        \n            </thead>\n        \n            <tbody>\n                \n                {users.map((user)=>{\n                    // console.log(user.id)\n                    return(\n                    <tr key ={user.id}>\n                    <td>{user.name}</td>\n                    <td>{user.phone}</td>\n                    <td>{user.email}</td>\n                    <td>{user.id}</td>\n                    <td>{\n                      <ButtonToolbar>\n                          <Button\n                          className=\"mr-2\" variant=\"info\"\n                          //click={()=> this.setState({editUserModalShow:true})}\n                          \n                         onClick={() => {\n                            this.setState({editUserModalShow:true,username:user.name,\n                                userid:user.id,useremail:user.email,\n                                userphone:user.phone})\n                            this.show()\n                         }} >\n                              \n                              Edit\n                          </Button>\n\n                          <Button className=\"mr-2\" variant=\"danger\"\n                          onClick={()=> this.deleteUser(user.id)}\n                          \n                          >DELETE</Button>\n                          \n                        <EditUserModal show={this.state.editUserModalShow}\n                         onHide={editUserModalClose} \n                         userid = {this.state.userid} username = {this.state.username} useremail = {this.state.useremail} userphone = {this.state.userphone}/>\n                     </ButtonToolbar>\n                        \n                        }\n\n                        \n                        \n                        </td>\n                   \n\n                    </tr>\n                    )}\n                \n                    )}\n                \n        \n        \n            </tbody>\n        \n        </Table>\n        \n        <ButtonToolbar>\n            <Button  \n            variant='primary'\n            //oclick={()=> this.setState({creatUserModalShow: true})}\n           onClick={() => this.showCreate()}\n            \n            \n             > Add User</Button>\n           <CreatUserModal show={this.state.creatUserModalShow} onHide={creatUserModalClose} />\n        </ButtonToolbar>\n       \n        </div>\n        )}\n       \n    }\n\n\nexport default User;\n\n\n\n","/Users/alexstephane/Documents/projects/cspfrontend/src/components/Department.js",["60","61","62","63"],"/Users/alexstephane/Documents/projects/cspfrontend/src/components/Event.js",[],"/Users/alexstephane/Documents/projects/cspfrontend/src/components/Login.js",[],"/Users/alexstephane/Documents/projects/cspfrontend/src/components/Navigation.js",[],"/Users/alexstephane/Documents/projects/cspfrontend/src/components/CreatUserModal.js",["64"],"import React,{ compoment, Component } from \"react\";\nimport {Modal,Button,Row,Col,Form} from 'react-bootstrap';\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\n\nexport class  CreatUserModal extends Component{\n\n\nconstructor(props) {\n    super(props);\n\nthis.state = {snackbaropen: false, snackbarmsg:''};\nthis.handleSubmit = this.handleSubmit.bind(this);\n}\n\nSnackbarClose = (event) =>{\n  this.setState({snackbaropen:false});\n}\n\n\nhandleSubmit(event){\nevent.preventDefault();\n//alert(event.target.MemberName.value);\n\nfetch(`http://localhost:3004/users`,{\n  method:\"POST\",\n  headers:{\n    'Accept':'application/json',\n    'Content-Type': 'application/json'\n\n  },\n  body:JSON.stringify({\n    name: event.target.name.value,\n    phone: event.target.phone.value,\n    email: event.target.email.value\n\n  })\n})\n.then(resp=> resp.json())\n.then((result)=>{\n//alert(result)\n//this.setState({snackbaropen:true, snackbarmsg:result})\n\n},\n(error)=>{\n  //alert('Failed')\n  this.setState({snackbaropen:true, snackbarmsg:\"failed\"})\n\n}\n)\n}\n\n\n\n\n\n\n        render(){\n            // console.log(\"aledx\")\n           \n            return(\n\n              <div className=\"container\">\n                  <Snackbar\n                  anchorOrigin={{vertical:'center',horizontal:'center'}}\n                  open = {this.state.snackbaropen}\n                  autoHideDuration = {3000}\n                  onClick={this.SnackbarClose}\n                  message = {<span id=\"message-id\">{this.state.snackbarmsg}</span>}\n                  action ={[\n                    <IconButton\n                    key=\"close\"\n                    color=\"inherit\"\n                    onClick={this.SnackbarClose}>\n                      c\n                      x\n                    </IconButton>\n                  ]}\n\n                  />\n              <Modal\n                {...this.props}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n              >\n                <Modal.Header closeButton>\n                  <Modal.Title id=\"contained-modal-title-vcenter\">\n                    ADD A MEMBER\n                  </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                  \n          \n                     <Row>\n                       <Col sm={6}></Col>\n                       <Form onSubmit={this.handleSubmit}>\n                         <Form.Group controlId=\"name\">\n                         <Form.Label>Name</Form.Label>  \n                         <Form.Control \n                         type=\"text\"\n                         name= \"name\"\n                         required\n                         placeholder=\"name\"\n                         \n                         />\n                         </Form.Group>\n                         <Form.Group controlId=\"email\">\n                         <Form.Label>Email Address</Form.Label>  \n                         <Form.Control \n                         type=\"text\"\n                         name= \"email\"\n                         required\n                         placeholder=\"Email\"\n                         \n                         />\n                         </Form.Group>\n\n                         <Form.Group controlId=\"phone\">\n                         <Form.Label>phone Number</Form.Label>  \n                         <Form.Control \n                         type=\"text\"\n                         name= \"phone\"\n                         required\n                         placeholder=\"Phone\"\n                         \n                         />\n                         </Form.Group>\n\n                         \n\n                         <Button variant=\"primary\" type=\"submit\">\n                           Add Member\n                         </Button>\n                         </Form>\n\n                       \n\n\n                     </Row>\n                 \n                </Modal.Body>\n                <Modal.Footer>\n                  <Button variant=\"danger\"onClick={this.props.onHide}>Close</Button>\n                </Modal.Footer>\n              </Modal>\n                \n              </div>\n\n\n            )\n\n\n        }\n\n}\n  ","/Users/alexstephane/Documents/projects/cspfrontend/src/components/EditUserModal.js",["65","66","67","68"],"import React,{ compoment, Component } from \"react\";\nimport {Modal,Button,Row,Col,Form} from 'react-bootstrap';\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\n\nexport class  EditUserModal extends Component{\n\n\n\nconstructor(props) {\n    super(props);\n \n// this.state = {snackbaropen: false, snackbarmsg:''};\n// this.handleSubmit = this.handleSubmit.bind(this);\n}\n\n// state = {\n//   userid: this.state.user.id, \n  \n \n// }\n\n\n\n\n// SnackbarClose = (event) =>{\n//   this.setState({snackbaropen:false});\n// }\n\n\nhandleSubmit(event){\n  \n  \nevent.preventDefault();\n//alert(event.target.MemberName.value);\n\nfetch('http://localhost:3004/users/221',{\n  method:\"PATCH\",\n  headers:{\n    'Accept':'application/json',\n    'Content-Type': 'application/json'\n\n  },\n  body:JSON.stringify({\n   id: event.target.id.value,\n    name: event.target.name.value,\n    phone: event.target.phone.value,\n    email: event.target.email.value\n\n  })\n})\n// .then(resp=> resp.json())\n// .then((result)=>{\n//     console.log(result)\n// //alert(result)\n\n\n//  },\n//  (error)=>{\n// alert('Failed')\n// //   this.setState({snackbaropen:true, snackbarmsg:\"failed\"})\n//  }\n //)\n}\n\n\n\n\n\n\n        render(){\n           // console.log(\"alex\")\n           //console.log(userid)\n           \n            return(\n\n             \n                \n     \n              <Modal\n                {...this.props}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n              >\n                <Modal.Header closeButton>\n                  <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Edit A MEMBER\n                  </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                  \n                <Row>\n                       <Col sm={6}></Col>\n                       <Form onSubmit={this.handleSubmit}>\n                            \n                       <Form.Group controlId=\"id\">\n                         <Form.Label>Member Id</Form.Label>  \n                         <Form.Control \n                         type=\"text\"\n                         name= \"id\"\n                         required\n                         disabled\n                         defaultValue = {this.props.userid}\n                         placeholder=\"id\"\n                         \n                         />\n                         </Form.Group>\n\n\n                         <Form.Group controlId=\"name\">\n                         <Form.Label>Name</Form.Label>  \n                         <Form.Control \n                         type=\"text\"\n                         name= \"name\"\n                         required\n                         defaultValue = {this.props.username}\n                         placeholder=\"name\"\n                         \n                         />\n                         </Form.Group>\n                         <Form.Group controlId=\"email\">\n                         <Form.Label>Email Address</Form.Label>  \n                         <Form.Control \n                         type=\"text\"\n                         name= \"email\"\n                         required\n                         defaultValue = {this.props.useremail}\n                         placeholder=\"Email\"\n                         \n                         />\n                         </Form.Group>\n\n                         <Form.Group controlId=\"phone\">\n                         <Form.Label>phone Number</Form.Label>  \n                         <Form.Control \n                         type=\"text\"\n                         name= \"phone\"\n                         required\n                         defaultValue = {this.props.userphone}\n                         placeholder=\"Phone\"\n                         \n                         />\n                         </Form.Group>\n\n                         \n\n                         <Button variant=\"primary\" type=\"submit\">\n                          Update member\n                         </Button>\n                         </Form>\n\n                       \n\n\n                     </Row>\n                 \n                    \n                </Modal.Body>\n                <Modal.Footer>\n                  <Button variant=\"danger\"onClick={this.props.onHide}>Close</Button>\n                </Modal.Footer>\n              </Modal>\n                \n              \n\n\n            )\n\n\n        }\n\n}","/Users/alexstephane/Documents/projects/cspfrontend/src/components/CreatDepartmentModal.js",["69"],"/Users/alexstephane/Documents/projects/cspfrontend/src/components/EditDepatmentModal.js",["70","71","72","73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":74,"column":24,"nodeType":"80","messageId":"81","endLine":74,"endColumn":30},{"ruleId":"78","severity":1,"message":"82","line":74,"column":31,"nodeType":"80","messageId":"81","endLine":74,"endColumn":39},{"ruleId":"78","severity":1,"message":"83","line":74,"column":40,"nodeType":"80","messageId":"81","endLine":74,"endColumn":49},{"ruleId":"78","severity":1,"message":"84","line":74,"column":51,"nodeType":"80","messageId":"81","endLine":74,"endColumn":60},{"ruleId":"78","severity":1,"message":"79","line":74,"column":24,"nodeType":"80","messageId":"81","endLine":74,"endColumn":30},{"ruleId":"78","severity":1,"message":"82","line":74,"column":31,"nodeType":"80","messageId":"81","endLine":74,"endColumn":39},{"ruleId":"78","severity":1,"message":"83","line":74,"column":40,"nodeType":"80","messageId":"81","endLine":74,"endColumn":49},{"ruleId":"78","severity":1,"message":"84","line":74,"column":51,"nodeType":"80","messageId":"81","endLine":74,"endColumn":60},{"ruleId":"78","severity":1,"message":"85","line":1,"column":16,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},{"ruleId":"78","severity":1,"message":"85","line":1,"column":16,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},{"ruleId":"78","severity":1,"message":"86","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":16},{"ruleId":"78","severity":1,"message":"87","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":18},{"ruleId":"88","severity":1,"message":"89","line":11,"column":1,"nodeType":"90","messageId":"91","endLine":16,"endColumn":2},{"ruleId":"78","severity":1,"message":"85","line":1,"column":16,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},{"ruleId":"78","severity":1,"message":"85","line":1,"column":16,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},{"ruleId":"78","severity":1,"message":"86","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":16},{"ruleId":"78","severity":1,"message":"87","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":18},{"ruleId":"88","severity":1,"message":"89","line":11,"column":1,"nodeType":"90","messageId":"91","endLine":16,"endColumn":2},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'userid' is assigned a value but never used.","Identifier","unusedVar","'username' is assigned a value but never used.","'useremail' is assigned a value but never used.","'userphone' is assigned a value but never used.","'compoment' is defined but never used.","'Snackbar' is defined but never used.","'IconButton' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]